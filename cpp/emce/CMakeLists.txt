cmake_minimum_required(VERSION 3.18)
project(
  EMCE
  VERSION 0.1.0
  LANGUAGES CXX CUDA)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)
set(CMAKE_CXX_FLAGS "-Wall -Wextra -Werror")
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)

set(CMAKE_CUDA_STANDARD 17)
set(CMAKE_CUDA_STANDARD_REQUIRED ON)
set(CMAKE_CUDA_FLAGS "-expt-relaxed-constexpr")
set(CMAKE_CUDA_STANDARD_REQUIRED TRUE)

if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release)
endif()

set(EMCE_INCLUDE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/include/emce")
set(EMCE_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src")

file(GLOB EMCE_MODEL_HEADERS "${EMCE_INCLUDE_DIR}/model/*.cuh")
file(GLOB EMCE_OPTION_HEADERS "${EMCE_INCLUDE_DIR}/option/*.cuh")
file(GLOB EMCE_PRICER_HEADERS "${EMCE_INCLUDE_DIR}/pricer/*.cuh")
file(GLOB EMCE_SIMULATER_HEADERS "${EMCE_INCLUDE_DIR}/simulater/*.cuh")
set(EMCE_HEADERS ${EMCE_MODEL_HEADERS} ${EMCE_OPTION_HEADERS}
                 ${EMCE_PRICER_HEADERS} ${EMCE_SIMULATER_HEADERS})

file(GLOB EMCE_MODEL_SOURCES "${EMCE_SOURCE_DIR}/model/*.cu")
file(GLOB EMCE_OPTION_SOURCES "${EMCE_SOURCE_DIR}/option/*.cu")
file(GLOB EMCE_PRICER_SOURCES "${EMCE_SOURCE_DIR}/pricer/*.cu")
file(GLOB EMCE_SIMULATER_SOURCES "${EMCE_SOURCE_DIR}/simulater/*.cu")
set(EMCE_SOURCES ${EMCE_MODEL_SOURCES} ${EMCE_OPTION_SOURCES}
                 ${EMCE_PRICER_SOURCES} ${EMCE_SIMULATER_SOURCES})

# TODO: add SHARED option.
add_library(EMCE STATIC ${EMCE_SOURCES} ${EMCE_HEADERS})
target_include_directories(
  EMCE PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>"
              "$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>")
set_target_properties(EMCE PROPERTIES CUDA_SEPARABLE_COMPILATION ON)

add_library(EMCE::EMCE ALIAS EMCE)

enable_testing()
add_subdirectory(tests)
